var documenterSearchIndex = {"docs":
[{"location":"lib/interpolate/#Interpolate","page":"Interpolate","title":"Interpolate","text":"","category":"section"},{"location":"lib/interpolate/","page":"Interpolate","title":"Interpolate","text":"Modules = [QuantumStatistics.Interpolate]","category":"page"},{"location":"lib/interpolate/#QuantumStatistics.Interpolate.linear2D-NTuple{5,Any}","page":"Interpolate","title":"QuantumStatistics.Interpolate.linear2D","text":"linear2D(xgrid, ygrid, data, x, y) \n\nlinear interpolation of data(x, y)\n\n#Arguments:\n\nxgrid: one-dimensional grid of x\nygrid: one-dimensional grid of y\ndata: two-dimensional array of data\nx: x\ny: y\n\n\n\n\n\n","category":"method"},{"location":"lib/diagram/#Simple-Diagrams","page":"Simple Diagrams","title":"Simple Diagrams","text":"","category":"section"},{"location":"lib/diagram/","page":"Simple Diagrams","title":"Simple Diagrams","text":"Modules = [QuantumStatistics.Diagram]","category":"page"},{"location":"lib/diagram/#QuantumStatistics.Diagram","page":"Simple Diagrams","title":"QuantumStatistics.Diagram","text":"Calculator for some simple diagrams\n\n\n\n\n\n","category":"module"},{"location":"lib/diagram/#QuantumStatistics.Diagram.Polar0-NTuple{4,Any}","page":"Simple Diagrams","title":"QuantumStatistics.Diagram.Polar0","text":"Polar0(q, n, kF, β)\n\nCompute the polarization function of free electrons in the Matsubara frequency. Assume k_B T=1 to the energy scale.\n\nArguments\n\nq: external momentum, q<1e-4 will be treated as q=0 \nn: the externel Matsubara frequency\nkF: the Fermi momentum \n\n\n\n\n\n","category":"method"},{"location":"lib/green/#Green's-functions","page":"Green's functions","title":"Green's functions","text":"","category":"section"},{"location":"lib/green/","page":"Green's functions","title":"Green's functions","text":"Modules = [QuantumStatistics.Green]","category":"page"},{"location":"lib/green/#QuantumStatistics.Green","page":"Green's functions","title":"QuantumStatistics.Green","text":"Provide N-body response and correlation functions\n\n\n\n\n\n","category":"module"},{"location":"lib/green/#QuantumStatistics.Green.FermiDirac-Union{Tuple{T}, Tuple{T,T}} where T<:AbstractFloat","page":"Green's functions","title":"QuantumStatistics.Green.FermiDirac","text":"FermiDirac(β, ε)\n\nCompute the Fermi Dirac function. Assume k_B=hbar=1\n\nf(ϵ) = 1(1+e^-βε)\n\nArguments\n\nβ: the inverse temperature \nε: dispersion minus chemical potential: E_k-μ      it could also be the real frequency ω if the bare Green's function is used as the kernel in the Lehmann representation \n\n\n\n\n\n","category":"method"},{"location":"lib/green/#QuantumStatistics.Green.bareFermi-Union{Tuple{T}, Tuple{T,T,AbstractArray{T,1},T}} where T<:AbstractFloat","page":"Green's functions","title":"QuantumStatistics.Green.bareFermi","text":"calcualte with a given momentum vector and the chemical potential μ, rotation symmetry is assumed.\n\n\n\n\n\n","category":"method"},{"location":"lib/green/#QuantumStatistics.Green.bareFermi-Union{Tuple{T}, Tuple{T,T,T}} where T<:AbstractFloat","page":"Green's functions","title":"QuantumStatistics.Green.bareFermi","text":"bareFermi(β, τ, ε, [, scale])\n\nCompute the bare fermionic Green's function. Assume k_B=hbar=1\n\ng(τ0) = e^-ετ(1+e^-βε) g(τ0) = -e^-ετ(1+e^βε)\n\nArguments\n\nβ: the inverse temperature \nτ: the imaginary time, must be (-β, β]\nε: dispersion minus chemical potential: E_k-μ      it could also be the real frequency ω if the bare Green's function is used as the kernel in the Lehmann representation \n\n\n\n\n\n","category":"method"},{"location":"lib/green/#QuantumStatistics.Green.bareFermiMatsubara-Union{Tuple{T}, Tuple{T,Int64,T}} where T<:AbstractFloat","page":"Green's functions","title":"QuantumStatistics.Green.bareFermiMatsubara","text":"bareFermiMatsubara(β, n, ε, [, scale])\n\nCompute the bare Green's function for a given Matsubara frequency.\n\ng(iω_n) = -1(iω_n-ε)\n\nwhere ω_n=(2n+1)πβ. The convention here is consist with the book \"Quantum Many-particle Systems\" by J. Negele and H. Orland, Page 95\n\nArguments\n\nβ: the inverse temperature \nτ: the imaginary time, must be (-β, β]\nε: dispersion minus chemical potential: E_k-μ;       it could also be the real frequency ω if the bare Green's function is used as the kernel in the Lehmann representation \n\n\n\n\n\n","category":"method"},{"location":"#QuantumStatistics.jl","page":"QuantumStatistics.jl","title":"QuantumStatistics.jl","text":"","category":"section"},{"location":"","page":"QuantumStatistics.jl","title":"QuantumStatistics.jl","text":"A platform for numerical experiments on quantum statistics.","category":"page"},{"location":"#Outline","page":"QuantumStatistics.jl","title":"Outline","text":"","category":"section"},{"location":"","page":"QuantumStatistics.jl","title":"QuantumStatistics.jl","text":"Pages = [\n    \"lib/diagram.md\",\n    \"lib/green.md\",\n    \"lib/grid.md\",\n    \"lib/interpolate.md\",\n    \"lib/fastmath.md\",\n]\nDepth = 1","category":"page"},{"location":"lib/fastmath/#Fast-Math-Functions","page":"Fast Math Functions","title":"Fast Math Functions","text":"","category":"section"},{"location":"lib/fastmath/","page":"Fast Math Functions","title":"Fast Math Functions","text":"Modules = [QuantumStatistics.FastMath]","category":"page"},{"location":"lib/fastmath/#QuantumStatistics.FastMath","page":"Fast Math Functions","title":"QuantumStatistics.FastMath","text":"Provide a set of fast math functions\n\n\n\n\n\n","category":"module"},{"location":"lib/fastmath/#QuantumStatistics.FastMath.invsqrt-Tuple{Float64}","page":"Fast Math Functions","title":"QuantumStatistics.FastMath.invsqrt","text":"invsqrt(x)\n\nThe Legendary Fast Inverse Square Root See the following links: wikipedia and thesis\n\n\n\n\n\n","category":"method"},{"location":"lib/grid/#Grids","page":"Grids","title":"Grids","text":"","category":"section"},{"location":"lib/grid/","page":"Grids","title":"Grids","text":"Modules = [QuantumStatistics.Grid]","category":"page"},{"location":"lib/grid/#QuantumStatistics.Grid.Uniform","page":"Grids","title":"QuantumStatistics.Grid.Uniform","text":"Uniform{Type,SIZE}\n\nCreate a uniform Grid with a given type and size\n\nMember:\n\nβ: inverse temperature\nhalfLife: the grid is densest in the range (0, halfLife) and (β-halfLife, β)\nsize: the Grid size\ngrid: vector stores the grid\nsize: size of the grid vector\nhead: grid head\ntail: grid tail\nδ: distance between two grid elements\nisopen: if isopen[1]==true, then grid[1] will be slightly larger than the grid head. Same for the tail.\n\n\n\n\n\n","category":"type"},{"location":"lib/grid/#QuantumStatistics.Grid.boseK","page":"Grids","title":"QuantumStatistics.Grid.boseK","text":"boseK(Kf, maxK, halfLife, size::Int, kFi = floor(Int, 0.5size), twokFi = floor(Int, 2size / 3), type = Float64)\n\nCreate a logarithmic bosonic K Grid, which is densest near the momentum 0 and 2k_F\n\n#Arguments:\n\nKf: Fermi momentum\nmaxK: the upper bound of the grid\nhalfLife: the grid is densest in the range (0, Kf+halfLife) and (2Kf-halfLife, 2Kf+halfLife)\nsize: the Grid size\nkFi: index of Kf\ntwokFi: index of 2Kf\n\n\n\n\n\n","category":"function"},{"location":"lib/grid/#QuantumStatistics.Grid.fermiK","page":"Grids","title":"QuantumStatistics.Grid.fermiK","text":"fermiK(Kf, maxK, halfLife, size::Int, kFi = floor(Int, 0.5size), type = Float64)\n\nCreate a logarithmic fermionic K Grid, which is densest near the Fermi momentum k_F\n\n#Arguments:\n\nKf: Fermi momentum\nmaxK: the upper bound of the grid\nhalfLife: the grid is densest in the range (Kf-halfLife, Kf+halfLife)\nsize: the Grid size\nkFi: index of Kf\n\n\n\n\n\n","category":"function"},{"location":"lib/grid/#QuantumStatistics.Grid.tau","page":"Grids","title":"QuantumStatistics.Grid.tau","text":"tau(β, halfLife, size::Int, type = Float64)\n\nCreate a logarithmic Grid for the imaginary time, which is densest near the 0 and β\n\n#Arguments:\n\nβ: inverse temperature\nhalfLife: the grid is densest in the range (0, halfLife) and (β-halfLife, β)\nsize: the Grid size\n\n\n\n\n\n","category":"function"}]
}
